<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
      <feature>jsp-2.3</feature>
      <feature>oauth-2.0</feature>
      <feature>usr:customStoreSample-1.0</feature>
    </featureManager>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />

    <oauthProvider
	id="OAuthConfig"
	filter="request-url%=ssodemo"
	oauthOnly="false">

      <!--  
           Configure the customStore to use the implementation that is provided by the user feature.
           This requires that the 'storeId' attribute value matches the 'oauth.store.id' property that
           specified in the OSGi component service for the OAuthStore implementation.
   
           We set a short cleanupExpiredInterval so that automated cleanup of expired tokens occurs
           in short intervals. This is a *very* short interval and is for demonstration purposes only.
           Production servers would likely not benefit froms such a short interval.	   
      -->
      <customStore storeId="mongoDbStore" cleanupExpiredInterval="30"/>

      <autoAuthorizeClient>dclient01</autoAuthorizeClient>
      <autoAuthorizeClient>dclient02</autoAuthorizeClient>
    </oauthProvider>
        
    <oauth-roles>
      <authenticated>
	<user>testuser</user>
      </authenticated>
    </oauth-roles>

    <basicRegistry id="basic" realm="BasicRealm">
      <user name="testuser" password="password" />
    </basicRegistry>

    <webAppSecurity allowFailOverToBasicAuth="true" />

    <!--
	Enable trace for security.
    -->
    <logging traceSpecification="*=info:com.ibm.ws.security.*=all:com.ibm.websphere.security.*=all"/>
</server>
